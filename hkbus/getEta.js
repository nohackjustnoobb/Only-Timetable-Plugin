var d=(()=>{try{return!!(navigator&&navigator.userAgent&&navigator.userAgent.includes("Safari/")&&!(navigator.userAgent.includes("Chrome/")||navigator.userAgent.includes("Chromium/")))}catch{return!1}})(),Y=(s,t)=>t.getDay()===0?!0:s.includes(String(t.getUTCFullYear())+String(t.getUTCMonth()+1).padStart(2,"0")+String(t.getUTCDate()).padStart(2,"0")),g=({holidays:s,serviceDayMap:t,date:i,freq:o})=>{if(o===null)return[];let a=(c,u)=>Object.keys(c).sort((r,f)=>r<f?-1:1).reduce((r,f)=>{let n=new Date(u.getTime());return n.setUTCHours(parseInt(f.slice(0,2),10)),n.setUTCMinutes(parseInt(f.slice(2),10)),n>=u&&r.push(String(n.getUTCFullYear())+"-"+String(n.getUTCMonth()+1).padStart(2,"0")+"-"+String(n.getUTCDate()).padStart(2,"0")+"T"+String(n.getUTCHours()).padStart(2,"0")+":"+String(n.getUTCMinutes()).padStart(2,"0")+":00.000+08:00"),r},[]),e=Array(24).fill(0).reduce((c,u,r)=>{let f=new Date(i.getTime());f.setUTCHours(f.getUTCHours()+8+r);for(let n in o)if(Y(s,f)){if(t[n][0]==="1")return c.concat(a(o[n],f))}else if(t[n][f.getDay()])return c.concat(a(o[n],f)).sort();return c},[]);return[...new Set(e)].sort((c,u)=>c<u?-1:1)};function y({stopId:s,route:t,seq:i,serviceType:o,stops:a,co:e,bound:c}){return fetch(`https://data.etabus.gov.hk/v1/transport/kmb/eta/${s}/${t}/${o}`,{cache:d?"default":"no-store"}).then(u=>u.json()).then(({data:u})=>u.filter(r=>r.dir===c).sort((r,f)=>Math.abs(r.seq-i)<Math.abs(f.seq-i)?-1:1).filter((r,f,n)=>r.seq===n[0].seq).filter(r=>e.length>1||o!==r.service_type||r.seq===i+1).filter(r=>a[a.length-1]===a[0]&&s===a[0]?r.seq===i+1:!0).map(r=>({eta:r.eta,remark:{zh:r.rmk_tc,en:r.rmk_en},dest:{zh:r.dest_tc,en:r.dest_en},co:"kmb"}))).catch(u=>(console.error(u),[]))}function x({stopId:s,route:t,bound:i,seq:o}){return fetch(`https://rt.data.gov.hk//v2/transport/citybus/eta/CTB/${s}/${t}`,{cache:d?"default":"no-store"}).then(a=>a.json()).then(({data:a})=>a.filter(e=>i.includes(e.dir)).sort((e,c)=>Math.abs(e.seq-o)<Math.abs(c.seq-o)?-1:1).filter((e,c,u)=>e.seq===u[0].seq).map(e=>({eta:e.eta,remark:{zh:e.rmk_tc,en:e.rmk_en},dest:{zh:e.dest_tc,en:e.dest_en},co:"ctb"}))).catch(a=>(console.error(a),[]))}function M({stopId:s,nlbId:t}){return fetch("https://rt.data.gov.hk/v1/transport/nlb/stop.php?action=estimatedArrivals",{body:JSON.stringify({routeId:t,stopId:s,language:"zh"}),headers:{"Content-Type":"text/plain"},method:"POST",cache:d?"default":"no-store"}).then(i=>i.json()).then(({estimatedArrivals:i})=>i?i.filter(o=>o.estimatedArrivalTime).map(o=>({eta:o.estimatedArrivalTime.replace(" ","T")+".000+08:00",remark:{zh:"",en:""},dest:{zh:"",en:""},co:"nlb"})):[])}function N({stopId:s,route:t,language:i}){return fetch("https://rt.data.gov.hk/v1/transport/mtr/bus/getSchedule",{method:"POST",cache:d?"default":"no-store",headers:{"Content-Type":"application/json"},body:JSON.stringify({language:i,routeName:t})}).then(o=>o.json()).then(({busStop:o})=>o.filter(({busStopId:a})=>a===s).reduce((a,{bus:e})=>[...a,...e.reduce((c,u)=>{let r=new Date(Date.now()+parseInt(u.arrivalTimeInSecond==="108000"?u.departureTimeInSecond:u.arrivalTimeInSecond,10)*1e3+288e5);return[...c,{eta:`${r.getUTCFullYear()}-${`0${r.getUTCMonth()+1}`.slice(-2)}-${`0${r.getUTCDate()}`.slice(-2)}T${`0${r.getUTCHours()}`.slice(-2)}:${`0${r.getMinutes()}`.slice(-2)}:${`0${r.getSeconds()}`.slice(-2)}+08:00`,remark:{[i]:u.busRemark||(u.isScheduled==="1"?i==="en"?"Scheduled":"\u9810\u5B9A\u73ED\u6B21":"")},dest:{zh:"",en:""},co:"lrtfeeder"}]},[])],[]))}function I({gtfsId:s,stopId:t,bound:i,seq:o}){return fetch(`https://data.etagmb.gov.hk/eta/route-stop/${s}/${t}`,{cache:d?"default":"no-store"}).then(a=>a.json()).then(({data:a})=>a.filter(({route_seq:e})=>i==="O"&&e===1||i==="I"&&e===2).filter(({stop_seq:e})=>e===o+1).reduce((e,{enabled:c,eta:u,description_tc:r,description_en:f})=>[...e,...c?u.map(n=>{var m,p;return{eta:n.timestamp,remark:{zh:(m=n.remarks_tc)!==null&&m!==void 0?m:"",en:(p=n.remarks_en)!==null&&p!==void 0?p:""},dest:{zh:"",en:""},co:"gmb"}}):[{eta:null,remark:{zh:r??"",en:f??""},dest:{zh:"",en:""},co:"gmb"}]],[]))}function S({stopId:s,route:t,dest:i}){return fetch(`https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${s.slice(2)}`,{cache:d?"default":"no-store"}).then(o=>o.json()).then(({platform_list:o})=>o.every(({end_service_status:a})=>a)?[{eta:null,remark:{zh:"\u6B64\u7AD9\u4ECA\u65E5\u670D\u52D9\u5DF2\u7D93\u7D42\u6B62",en:"This stop's service for today has ended"},dest:{zh:"",en:""},co:"lightRail"}]:o.reduce((a,{route_list:e,platform_id:c})=>[...a,...(e??[]).filter(({route_no:u,dest_ch:r,dest_en:f,stop:n})=>t===u&&(r===i.zh||f.includes("Circular"))&&n===0).map(({time_en:u,train_length:r})=>{let f=0;switch(u.toLowerCase()){case"arriving":case"departing":case"-":f=0;break;default:f=parseInt(u,10);break}let n=new Date(Date.now()+f*60*1e3+8*36e5);return{eta:`${n.getUTCFullYear()}-${`0${n.getUTCMonth()+1}`.slice(-2)}-${`0${n.getUTCDate()}`.slice(-2)}T${`0${n.getUTCHours()}`.slice(-2)}:${`0${n.getMinutes()}`.slice(-2)}:${`0${n.getSeconds()}`.slice(-2)}+08:00`,remark:{zh:`${c}\u865F\u6708\u53F0 - ${Array(r).fill("\u25AD").join("")}`,en:`Platform ${c} - ${Array(r).fill("\u25AD").join("")}`},dest:{zh:"",en:""},co:"lightRail"}},[])],[])).catch(o=>(console.error(o),[]))}function $({stopId:s,route:t,bound:i,stopList:o}){return fetch(`https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${t}&sta=${s}`,{cache:d?"default":"no-store"}).catch(()=>fetch(`https://mtr.hkbus.app/?line=${t}&sta=${s}`,{cache:d?"default":"no-store"})).then(a=>a.json()).then(({data:a,message:e,status:c,url:u})=>{if(c===0){if(e&&typeof e=="string"){let r=e.replace("Please click here for more information.","").trim();return[{eta:null,remark:{zh:r,en:r},dest:{zh:"",en:""},co:"mtr"}]}return[]}return a[`${t}-${s}`][i.endsWith("UT")?"UP":"DOWN"].reduce((r,{time:f,plat:n,dest:m})=>[...r,{eta:f.replace(" ","T")+"+08:00",remark:{zh:`${n}\u865F\u6708\u53F0`,en:`Platform ${n}`},dest:{zh:o[m].name.zh,en:o[m].name.en},co:"mtr"}],[])})}function O({route:s,seq:t,freq:i,holidays:o,serviceDayMap:a}){return t===1?Promise.resolve([]):fetch(`https://www.sunferry.com.hk/eta/?route=${s}`,{cache:d?"default":"no-store"}).then(e=>e.json()).then(({data:e})=>{throw new Error("")}).catch(()=>{let e=new Date;return g({holidays:o,serviceDayMap:a,freq:i,date:new Date}).filter(c=>new Date(c).getTime()-e.getTime()<180*60*1e3).map(c=>({eta:c,remark:{zh:"\u9810\u5B9A\u73ED\u6B21",en:"Scheduled"},dest:{zh:"",en:""},co:"sunferry"}))})}function z({stops:{fortuneferry:s},seq:t,holidays:i,freq:o,serviceDayMap:a}){if(t>=1)return Promise.resolve([]);let e=new Date;return Promise.resolve(g({holidays:i,serviceDayMap:a,freq:o,date:new Date}).filter(c=>new Date(c).getTime()-e.getTime()<180*60*1e3).map(c=>({eta:c,remark:{zh:"\u9810\u5B9A\u73ED\u6B21",en:"Scheduled"},dest:{zh:"",en:""},co:"fortuneferry"})))}function k({freq:s,seq:t,holidays:i,serviceDayMap:o}){if(t>=1)return Promise.resolve([]);let a=new Date;return Promise.resolve(g({holidays:i,serviceDayMap:o,freq:s,date:new Date}).filter(e=>new Date(e).getTime()-a.getTime()<180*60*1e3).map(e=>({eta:e,remark:{zh:"\u9810\u5B9A\u73ED\u6B21",en:"Scheduled"},dest:{zh:"",en:""},co:"fortuneferry"})))}var fe=new Intl.DateTimeFormat("en-US",{hourCycle:"h23",timeZone:"America/New_York",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).format(new Date("2014-06-25T04:00:00.123Z"));var be=60*1e3;async function v({route:s,stops:t,bound:i,dest:o,freq:a,seq:e,serviceType:c,co:u,nlbId:r,gtfsId:f,stopList:n,language:m,holidays:p,serviceDayMap:w}){try{let l=[];for(let h of u)h==="kmb"&&t.kmb?l=l.concat(await y({route:s,stops:t.kmb,stopId:t.kmb[e],seq:e,co:u,serviceType:c,bound:i.kmb})):h==="ctb"&&t.ctb?l=l.concat(await x({stopId:t.ctb[e],route:s,bound:i.ctb,seq:e})):h==="nlb"&&t.nlb?l=l.concat(await M({stopId:t.nlb[e],nlbId:r})):h==="lrtfeeder"&&t.lrtfeeder?l=l.concat(await N({stopId:t.lrtfeeder[e],route:s,language:m})):h==="gmb"&&t.gmb?l=l.concat(await I({stopId:t.gmb[e],gtfsId:f,seq:e,bound:i.gmb})):h==="lightRail"&&t.lightRail?l=l.concat(await S({stopId:t.lightRail[e],route:s,dest:o})):h==="mtr"&&t.mtr?l=l.concat(await $({stopId:t.mtr[e],route:s,stopList:n,bound:i.mtr})):h==="fortuneferry"&&t.fortuneferry?l=l.concat(await z({stops:t,seq:e,stopList:n,freq:a,serviceDayMap:w,holidays:p})):h==="sunferry"&&t.sunferry?l=l.concat(await O({route:s,seq:e,holidays:p,serviceDayMap:w,freq:a})):h==="hkkf"&&t.hkkf&&(l=l.concat(await k({freq:a,seq:e,holidays:p,serviceDayMap:w})));return l.some(h=>h.eta)&&(l=l.filter(h=>h.eta)),l.sort((h,b)=>!h.eta||h.eta===""?1:!b.eta||b.eta===""||h.eta<b.eta?-1:1)}catch(l){return console.error(l),[]}}async function D(s){let t=await sendMessage("getValue",s);return t??null}var P=["mtr","fortuneferry"],j=["fortuneferry","sunferry","hkkf"];async function A(s,t){let i=JSON.parse(s.meta),o=j.filter(n=>i.co.includes(n)).length>0,a=o?JSON.parse(await D("serviceDayMap")):null,e=o?JSON.parse(await D("holidays")):null,u=P.filter(n=>i.co.includes(n)).length>0?JSON.parse(await D("stopList")):null,r=s.stops.indexOf(t.id);return(await v({...i,seq:r,stopList:u,serviceDayMap:a,holidays:e,language:"en"})).map(n=>({isRealTime:n.remark.en=="",arrivalTime:Date.parse(n.eta)})).filter(n=>!isNaN(n.arrivalTime))}var Dt=A;export{Dt as default};
