var a=(()=>{try{return!!(navigator&&navigator.userAgent&&navigator.userAgent.includes("Safari/")&&!(navigator.userAgent.includes("Chrome/")||navigator.userAgent.includes("Chromium/")))}catch{return!1}})();var ee=new Intl.DateTimeFormat("en-US",{hourCycle:"h23",timeZone:"America/New_York",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).format(new Date("2014-06-25T04:00:00.123Z"));var fe=60*1e3;async function d(){return fetch("https://data.hkbus.app/routeFareList.min.json",{cache:"no-store"}).then(r=>r.json()).catch(()=>fetch("https://hkbus.github.io/hk-bus-crawling/routeFareList.min.json",{cache:"no-store"}).then(r=>r.json()))}async function g(r){await sendMessage("saveRoutes",r.map(e=>(e.meta&&(e.meta=JSON.stringify(e.meta)),e.source&&(e.source=JSON.stringify(e.source)),e)))}async function T(r){await sendMessage("saveStops",r.map(e=>(e.name&&(e.name=JSON.stringify(e.name)),e.meta&&(e.meta=JSON.stringify(e.meta)),e)))}async function D(r){let e=await sendMessage("getValue",r);return e??null}async function c(r,e){await sendMessage("setValue",r,e)}var k=24*60*60*1e3,z={en:{kmb:"KMB",ctb:"CTB",nlb:"NLB",lrtfeeder:"MTR",gmb:"GMB",sunferry:"Sun",hkkf:"HKKF",fortuneferry:"Fortune"},zh:{kmb:"\u4E5D\u5DF4",ctb:"\u57CE\u5DF4",nlb:"\u5DBC\u5DF4",gmb:"\u5C08\u7DDA\u5C0F\u5DF4",lrtfeeder:"\u6E2F\u9435",sunferry:"\u65B0\u6E21\u8F2A",hkkf:"\u6E2F\u4E5D\u5C0F\u8F2A",fortuneferry:"\u5BCC\u88D5\u5C0F\u8F2A"},zh_CN:{kmb:"\u4E5D\u5DF4",ctb:"\u57CE\u5DF4",nlb:"\u5C7F\u5DF4",gmb:"\u4E13\u7EBF\u5C0F\u5DF4",lrtfeeder:"\u6E2F\u94C1",sunferry:"\u65B0\u6E21\u8F6E",hkkf:"\u6E2F\u4E5D\u5C0F\u8F6E",fortuneferry:"\u5BCC\u88D5\u5C0F\u8F6E"}};async function C(){let r=await D("lastUpdate");if(r&&Date.now()-Number(r)<k)return;let e=await d(),l=[];for(let[o,t]of Object.entries(e.stopList)){let n={id:o,name:{...t.name,zh_CN:t.name.zh},lat:t.location.lat,long:t.location.lng,meta:e.stopMap[o]};l.push(n)}await T(l);let i={};for(let[o,t]of Object.entries(e.stopMap)){if(!e.stopList[o])throw new Error(`Invalid stop ID: ${o}`);for(let[n,s]of t)i[n]||(i[n]={}),i[n][s]=o}let w=(o,t)=>t.map(n=>{if(i[o][n])return i[o][n];if(e.stopList[n])return n;throw new Error(`Invalid stop ID: ${n} for company: ${o}`)}),m=[];for(let[o,t]of Object.entries(e.routeList)){let n=Object.keys(t.stops)[0],s=w(n,t.stops[n]),h=t.route;Number(t.serviceType)>1&&(h+=" \u20F0");let b={id:o,displayId:h,name:[...Object.values(t.orig),...Object.values(t.dest)].join("+"),source:Object.fromEntries(Object.entries(z).map(([y,I])=>[y,t.co.map(M=>I[M]).join("+").toLocaleUpperCase()])),orig:s[0],dest:s[s.length-1],stops:s,meta:t};m.push(b)}await g(m),await c("serviceDayMap",JSON.stringify(e.serviceDayMap)),await c("holidays",JSON.stringify(e.holidays)),await c("stopList",JSON.stringify(e.stopList)),await c("lastUpdate",String(Date.now()))}var wt=C;export{wt as default};
